{"version":3,"sources":["Components/SearchUser/SearchUser.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchUser","React","memo","userName","useState","searchTerm","setSearchTerm","foundUser","setFoundUser","console","log","debouncedChangeHandler","useCallback","debounce","e","target","value","getUser","length","fetch","then","res","json","data","catch","err","Fragment","className","type","placeholder","onChange","style","overflowX","Children","toArray","map","i","src","owner","avatar_url","alt","login","name","href","url","description","stargazers_count","open_issues_count","watchers_count","repos_url","App","RepoList","setRepoList","useEffect","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAoJeA,EAjJIC,IAAMC,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAC/B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAC,QAAQC,IAAI,aAAcP,GAO1BM,QAAQC,IAAI,WAAYL,GACxB,IAAMM,EAAyBC,sBAC7BC,KAPsB,SAACC,GACvB,IAAMT,EAAaS,EAAEC,OAAOC,MAC5BV,EAAcD,GACdY,EAAQZ,KAIkB,KAC1B,IAEIY,EAAU,SAACZ,GACfI,QAAQC,IAAI,YAAaL,GAErBA,EAAWa,OAAS,GACtBC,MAAM,gCAAkCd,EAAa,UAClDe,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,QAAQC,IAAI,OAAQa,GACpBf,EAAae,MAEdC,OAAM,SAACC,GACNhB,QAAQC,IAAIe,OAUpB,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKC,UAAU,eAAf,SACE,uBACEC,KAAK,OACLC,YAAY,cACZC,SAAUnB,MAId,6BACGN,EAAa,8BAAIA,EAAJ,eAA+B,yBAE/C,qBAAK0B,MAAO,CAAEC,UAAW,QAAzB,SACE,wBAAOL,UAAU,YAAjB,UACE,gCACE,+BACE,4CACA,2CACA,2CACA,6CACA,uCACA,kDACA,+CAGJ,gCACGtB,EAAWa,OAAS,EACjBjB,IAAMgC,SAASC,QACb3B,EAAU4B,KAAI,SAACC,GAEb,OADA3B,QAAQC,IAAI0B,GAEV,+BACE,qBAAIT,UAAU,gBAAd,UACE,qBACEU,IAAKD,EAAEE,MAAMC,WACbC,IAAI,YACJb,UAAU,cAEZ,uBAAMA,UAAU,aAAhB,cAA+BS,EAAEE,MAAMG,YAEzC,+BACG,IACD,uBAAMd,UAAU,aAAhB,cAA+BS,EAAEM,WAEnC,6BACE,mBAAGC,KAAMP,EAAEQ,IAAX,SAAiBR,EAAEQ,QAErB,+BACG,IACD,uBAAMjB,UAAU,aAAhB,cAA+BS,EAAES,kBAEnC,6BAAKT,EAAEU,mBACP,6BAAKV,EAAEW,oBACP,6BAAKX,EAAEY,wBAKf/C,IAAMgC,SAASC,QACb/B,EAASgC,KAAI,SAACC,GACZ,OACE,+BACE,6BACE,uBAAMT,UAAU,aAAhB,cAA+BS,EAAEK,WAEnC,6BACE,mBAAGE,KAAMP,EAAEQ,IAAX,SAAiBR,EAAEQ,QAErB,6BACE,mBAAGD,KAAMP,EAAEa,UAAX,SAAuBb,EAAEa,cAE3B,oCACA,oCACA,oCACA,wDCnETC,MA3Cf,WACE,MAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KAgCA,OA/BAC,qBAAU,WACRlC,MAAM,gCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL6B,EAAY7B,MAEbC,OAAM,SAACC,GACNhB,QAAQC,IAAIe,QAEf,IAuBD,sBAAKE,UAAU,MAAf,UACE,oBAAII,MAAO,CAAEuB,MAAO,QAApB,iFAGA,cAAC,EAAD,CAAYnD,SAAUgD,QC/BbI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ab08e28.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\nimport \"./SearchUser.css\";\r\nconst SearchUser = React.memo(({ userName }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [foundUser, setFoundUser] = useState([]);\r\n\r\n  console.log(\"userName>>\", userName);\r\n\r\n  const handleUserInput = (e) => {\r\n    const searchTerm = e.target.value;\r\n    setSearchTerm(searchTerm);\r\n    getUser(searchTerm);\r\n  };\r\n  console.log(\"search>>\", searchTerm);\r\n  const debouncedChangeHandler = useCallback(\r\n    debounce(handleUserInput, 3000),\r\n    []\r\n  );\r\n  const getUser = (searchTerm) => {\r\n    console.log(\"search1>>\", searchTerm);\r\n\r\n    if (searchTerm.length > 0) {\r\n      fetch(\"https://api.github.com/users/\" + searchTerm + \"/repos\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(\"data\", data);\r\n          setFoundUser(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //   if (searchTerm !== \"\") {\r\n  //     filteredNames = RepoList.filter((name) => {\r\n  //       return name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  //     });\r\n  //   }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search_block\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search User\"\r\n          onChange={debouncedChangeHandler}\r\n        />\r\n      </div>\r\n      {/* {renderFruitList()} */}\r\n      <h4>\r\n        {searchTerm ? <p>{searchTerm}-RepoList</p> : \" All User Repos List\"}\r\n      </h4>\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <table className=\"Repo_List\">\r\n          <thead>\r\n            <tr>\r\n              <th>Owner Name</th>\r\n              <th>Repo Name</th>\r\n              <th>Repos Url</th>\r\n              <th>Description</th>\r\n              <th>Stars</th>\r\n              <th>Open Issue Count</th>\r\n              <th>Watchers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {searchTerm.length > 0\r\n              ? React.Children.toArray(\r\n                  foundUser.map((i) => {\r\n                    console.log(i);\r\n                    return (\r\n                      <tr>\r\n                        <td className=\"owner_details\">\r\n                          <img\r\n                            src={i.owner.avatar_url}\r\n                            alt=\"owner_img\"\r\n                            className=\"owner_img\"\r\n                          ></img>\r\n                          <span className=\"owner_name\"> {i.owner.login}</span>\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <span className=\"owner_name\"> {i.name}</span>\r\n                        </td>\r\n                        <td>\r\n                          <a href={i.url}>{i.url}</a>\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <span className=\"owner_name\"> {i.description}</span>\r\n                        </td>\r\n                        <td>{i.stargazers_count}</td>\r\n                        <td>{i.open_issues_count}</td>\r\n                        <td>{i.watchers_count}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                )\r\n              : React.Children.toArray(\r\n                  userName.map((i) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>\r\n                          <span className=\"owner_name\"> {i.login}</span>\r\n                        </td>\r\n                        <td>\r\n                          <a href={i.url}>{i.url}</a>\r\n                        </td>\r\n                        <td>\r\n                          <a href={i.repos_url}>{i.repos_url}</a>\r\n                        </td>\r\n                        <td>NA</td>\r\n                        <td>NA</td>\r\n                        <td>NA</td>\r\n                        <td>NA</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                )}\r\n\r\n            {/* {searchTerm.length > 0\r\n            ? foundUser.map((i) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{i.name}</td>\r\n                    <td>\r\n                      <a href={i.full_name}>{i.full_name}</a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : RepoList.map((i) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{i.login}</td>\r\n                    <td>\r\n                      <a href={i.repos_url}>{i.repos_url}</a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })} */}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\nexport default SearchUser;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport \"./App.css\";\nimport SearchUser from \"./Components/SearchUser/SearchUser\";\n\nfunction App() {\n  const [RepoList, setRepoList] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.github.com/users\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRepoList(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // const getRepoName = () => {\n  //   // const response = await fetch(\"https://api.github.com/users\");\n  //   // const Repos = await response.json();\n  //   // console.log(\"Lst of users\", Repos);\n  //   // setRepoList({\n  //   //   ...RepoList,\n  //   //   Repos,\n  //   // });\n  //   // console.log(\"RepoList of\", RepoList);\n  //   //   return Repos;\n\n  //   fetch(\"https://api.github.com/users\")\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setRepoList(data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  return (\n    <div className=\"App\">\n      <h5 style={{ color: \"blue\" }}>\n        Toggle Between All User Repo and searched Repo list based on Search\n      </h5>\n      <SearchUser userName={RepoList}></SearchUser>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}